buildscript {
    repositories {
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'com.github.GTNH2:ForgeGradle:FG_1.2-SNAPSHOT'
    }
}

plugins {
    id("org.ajoberstar.grgit") version("3.1.1")
    id("com.palantir.git-version") version("0.12.3")
}

apply plugin: 'forge'
apply plugin: 'idea'


version = "1.7.10" + "-" + gitVersion()
group= "com.dyonovan.tcnodetracker"
archivesBaseName = "tcnodetracker"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10" + "-" + "10.13.4.1614" + "-" + "1.7.10"

    replaceIn "Constants.java"
    replace "@VERSION@", "1.1.2"

    runDir = "eclipse"
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
}

dependencies {
    compile("thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev")
    runtime("com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf")
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Make sure the player name in dev is constant. This keeps Thaumcraft progress between game restarts
runClient {
    def playerUserName = System.env.PLAYER_USER_NAME
    if (playerUserName == null)  {
        playerUserName = "Player-default"
    }

    args "--username", playerUserName
}

task sourcesJar(type: Jar) {
    from (sourceSets.main.allJava)
    from (file("$projectDir/LICENSE"))

    getArchiveClassifier().set('sources')
}

task devJar(type: Jar) {
    from sourceSets.main.output
    archiveClassifier.set("dev")
}


artifacts {
    archives sourcesJar
    archives devJar
}
